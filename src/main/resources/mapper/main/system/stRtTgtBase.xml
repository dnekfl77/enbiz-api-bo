<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.enbiz.api.bo.app.repository.main.system.StRtTgtBaseMapper">

	<sql id="paginatedBase">
		LIMIT #{rowsPerPage} OFFSET #{offset}
	</sql>

	<sql id="getStRtGrpMenuBaseListBase">
        WITH RECURSIVE CTE AS     (         /* stRtTgtBase.getStRtGrpMenuBaseListBase */
            SELECT
                     RT_TGT_SEQ
                   , RT_TGT_NM
                   , UPR_RT_TGT_SEQ
                   , POPUP_YN
                   , SYS_GB_CD
                   , 0 AS LEVEL
                   , CAST(CONCAT('.', RT_TGT_SEQ) AS CHAR(100)) AS HIERARCHY
            FROM      ST_RT_TGT_BASE
            WHERE     USE_YN = 'Y'
            AND       UPR_RT_TGT_SEQ = #{sysGbCd}
            UNION ALL
            SELECT
                      SMB.RT_TGT_SEQ
                    , SMB.RT_TGT_NM
                    , SMB.UPR_RT_TGT_SEQ
                    , SMB.POPUP_YN
                    , SMB.SYS_GB_CD
                    , LEVEL + 1
                    , CONCAT_WS('.', TMP1.HIERARCHY, SMB.RT_TGT_SEQ)  AS HIERARCHY
            FROM      ST_RT_TGT_BASE SMB,
                      CTE AS TMP1
            WHERE     TMP1.RT_TGT_SEQ = SMB.UPR_RT_TGT_SEQ
            AND       RT_TGT_TYP_CD IN ('10','20')
            AND       USE_YN = 'Y'
        )
        SELECT
                  SRI.RT_GRP_NO
                , CONCAT(CTE.LEVEL,',', CTE.RT_TGT_NM) AS RT_TGT_NM
                , CTE.RT_TGT_SEQ
                , CTE.POPUP_YN
                , CTE.SYS_GB_CD
                , CTE.HIERARCHY
                , CASE WHEN SRI.USE_YN IS NULL THEN 'N' ELSE SRI.USE_YN END USE_YN
        FROM      CTE
        LEFT OUTER JOIN ST_RT_INFO SRI
                    ON  SRI.RT_GRP_NO = #{rtGrpNo}
                    AND CTE.RT_TGT_SEQ = SRI.RT_TGT_SEQ
                    AND SRI.RT_SUB_GB_CD ='01'
        WHERE    CTE.UPR_RT_TGT_SEQ != #{sysGbCd}
        ORDER BY CTE.HIERARCHY
	</sql>

	<select id="getStRtGrpMenuBaseList" parameterType="RtTargetBaseMenuRequest" resultType="RtTargetBaseMenuResponse">
		<include refid="getStRtGrpMenuBaseListBase" />
	</select>

	<select id="getStRtGrpMenuBaseListCount" parameterType="RtTargetBaseMenuRequest" resultType="java.lang.Integer">
		SELECT              /* stRtTgtBase.getStRtGrpMenuBaseListCount */
		       COUNT(T1.RT_TGT_SEQ)
		FROM (
		  	   <include refid="getStRtGrpMenuBaseListBase" />
		) T1
	</select>

	<sql id="getStRtGrpBtnBaseListBase">
		SELECT                /* stRtTgtBase.getStRtGrpBtnBaseListBase */
                  RT_GRP_NO
	       		, A.RT_TGT_SEQ
                , RT_TGT_NM
                , RT_TGT_TYP_CD
                , B.USE_YN
        FROM      ST_RT_TGT_BASE A
        LEFT OUTER JOIN ST_RT_INFO B    ON A.RT_TGT_SEQ = B.RT_TGT_SEQ  AND B.RT_GRP_NO = #{rtGrpNo}
        WHERE     A.SYS_GB_CD = #{sysGbCd}
        AND       A.UPR_RT_TGT_SEQ = #{rtTgtSeq}
        AND       A.RT_TGT_TYP_CD IN ('30','40')
        ORDER BY  A.SORT_SEQ
	</sql>

	<select id="getStRtGrpBtnBaseList" parameterType="RtTargetBaseMenuRequest" resultType="RightTargetBaseMenuResponse">
		<include refid="getStRtGrpBtnBaseListBase" />
	</select>

	<select id="getStRtGrpBtnBaseListCount" parameterType="RtTargetBaseMenuRequest" resultType="java.lang.Integer">
		SELECT /* stRtTgtBase.getStRtGrpBtnBaseListCount */
		       COUNT(T1.RT_GRP_NO)
		FROM (
		  	   <include refid="getStRtGrpBtnBaseListBase" />
        ) T1
	</select>

    <select id="getMenuList"  parameterType="StRtTgtMenuRequest" resultType="StRtTgtMenuResponse">
        WITH RECURSIVE MENU AS (            /* stRtTgtBase.getMenuList */
           SELECT RT_TGT_SEQ
                , RT_TGT_NM
                , UPR_RT_TGT_SEQ
                , SORT_SEQ
                , LEAF_MENU_YN
                , CALL_URL
                , RT_TGT_TYP_CD
                , USE_YN
                , CUST_INFO_INCL_YN
                , SYS_GB_CD
                , CAST(CONCAT('\\', SORT_SEQ, RT_TGT_SEQ) AS CHAR(100)) AS HIERARCHY
             FROM ST_RT_TGT_BASE A
            WHERE USE_YN = 'Y'
              AND UPR_RT_TGT_SEQ = '11'
              AND SYS_GB_CD  = #{sysGbCd}                       /* 시스템구분  백오피스/고객센터 */
              AND RT_TGT_TYP_CD = '10'                              /* 권한대상유형 메뉴 */
            UNION ALL
           SELECT SMB.RT_TGT_SEQ
                , SMB.RT_TGT_NM
                , SMB.UPR_RT_TGT_SEQ
                , SMB.SORT_SEQ
                , SMB.LEAF_MENU_YN
                , SMB.CALL_URL
                , SMB.RT_TGT_TYP_CD
                , SMB.USE_YN
                , SMB.CUST_INFO_INCL_YN
                , SMB.SYS_GB_CD
                , CONCAT_WS('\\', TMP1.HIERARCHY, CONCAT(SMB.SORT_SEQ, SMB.RT_TGT_SEQ))  AS TEXT
             FROM ST_RT_TGT_BASE SMB
                , MENU AS TMP1
            WHERE TMP1.RT_TGT_SEQ = SMB.UPR_RT_TGT_SEQ
              AND SMB.SYS_GB_CD  = #{sysGbCd}                       /* 시스템구분  백오피스/고객센터 */
              AND SMB.RT_TGT_TYP_CD = '10'                          /* 권한대상유형 메뉴 */
        )
        SELECT
               RT_TGT_SEQ
             , RT_TGT_NM
             , UPR_RT_TGT_SEQ
             , SORT_SEQ
             , LEAF_MENU_YN
             , CALL_URL
             , RT_TGT_TYP_CD
             , (SELECT CD_NM FROM ST_STD_CD WHERE GRP_CD = 'UR010' AND CD = RT_TGT_TYP_CD) AS RT_TGT_TYP_NM
             , USE_YN
             , CUST_INFO_INCL_YN
             , SYS_GB_CD
             , (SELECT CD_NM FROM ST_STD_CD WHERE GRP_CD = 'UR005' AND CD = SYS_GB_CD) AS SYS_GB_NM
             , HIERARCHY
          FROM MENU
         WHERE LEAF_MENU_YN = 'Y'
         ORDER BY HIERARCHY
    </select>

	<select id="getMenuMgmtTreeList" parameterType="RtTargetBaseRequest" resultType="RtTargetBaseResponse">
        WITH RECURSIVE CTE AS (       /* stRtTgtBase.getMenuMgmtTreeList */
                SELECT  USE_YN
                     ,  RT_TGT_SEQ
                     ,  RT_TGT_NM
                     ,  UPR_RT_TGT_SEQ
                     ,  POPUP_YN
                     ,  1 AS LEVEL
                     ,  ' ' AS BLANK
                     ,  CAST(CONCAT('\\',CONCAT(LPAD(SORT_SEQ, 3, '0'), RT_TGT_SEQ)) AS CHAR(100))  AS HIERARCHY
                     , '0' AS NEW_SORT_SEQ
                     ,  SYS_GB_CD
                     ,  RT_TGT_TYP_CD
                     ,  SORT_SEQ
                     ,  CALL_URL
                     ,  CUST_INFO_INCL_YN
                     ,  RMK_CONT
                     ,  BTN_ID
                     ,  LEAF_MENU_YN
                     ,  USER_HELP_CONT
                FROM   ST_RT_TGT_BASE A
                WHERE   UPR_RT_TGT_SEQ = #{sysGbCd}
             UNION ALL
                SELECT  SMB.USE_YN
                     ,  SMB.RT_TGT_SEQ
                     ,  SMB.RT_TGT_NM
                     ,  SMB.UPR_RT_TGT_SEQ
                     ,  SMB.POPUP_YN
                     ,  LEVEL + 1
                     ,  CONCAT(TMP1.BLANK, '  ' ) AS BLANK
                     ,  CONCAT_WS('\\', TMP1.HIERARCHY, CONCAT(LPAD(SMB.SORT_SEQ, 3, '0'), SMB.RT_TGT_SEQ))  AS HIERARCHY
                     ,  CAST(CAST(
                            CASE
                            WHEN LEVEL + 1 BETWEEN 2 AND 9 THEN rpad(CAST(SMB.SORT_SEQ AS CHAR), (10-LEVEL + 1) * 3 + CHAR_LENGTH(CAST(SMB.SORT_SEQ AS CHAR)), '0')
                            ELSE '0'
                            END AS INTEGER) + CAST(TMP1.NEW_SORT_SEQ AS INTEGER) AS CHAR)
                     ,  SMB.SYS_GB_CD
                     ,  SMB.RT_TGT_TYP_CD
                     ,  SMB.SORT_SEQ
                     ,  SMB.CALL_URL
                     ,  SMB.CUST_INFO_INCL_YN
                     ,  SMB.RMK_CONT
                     ,  SMB.BTN_ID
                     ,  SMB.LEAF_MENU_YN
                     ,  SMB.USER_HELP_CONT
                FROM    ST_RT_TGT_BASE SMB, CTE AS TMP1
                WHERE   TMP1.RT_TGT_SEQ = SMB.UPR_RT_TGT_SEQ
                AND     SMB.RT_TGT_TYP_CD IN ('10','20')
            )
            SELECT    CTE.*
            FROM      CTE
            ORDER BY  HIERARCHY
    </select>

    <select id="getMenuMgmtTreeListForGroup" parameterType="RtTargetBaseRequest" resultType="RtTargetBaseResponse">
        WITH RECURSIVE CTE AS (       /* stRtTgtBase.getMenuMgmtTreeListForGroup */
                SELECT  USE_YN
                	 ,	RT_TGT_SEQ
                     ,  RT_TGT_NM
                     ,  UPR_RT_TGT_SEQ
                     ,  POPUP_YN
                     ,  1 AS LEVEL
                     ,  ' ' AS BLANK
                     ,  CAST(CONCAT('\\',SORT_SEQ, RT_TGT_SEQ) AS CHAR(100))  AS HIERARCHY
                     , '0' AS NEW_SORT_SEQ
                     ,	SYS_GB_CD
                     ,	RT_TGT_TYP_CD
                     ,	SORT_SEQ
                     ,	CALL_URL
                     ,	CUST_INFO_INCL_YN
                     ,	RMK_CONT
                     ,	BTN_ID
                     ,	LEAF_MENU_YN
                     ,	USER_HELP_CONT
                FROM   ST_RT_TGT_BASE A
                WHERE	UPR_RT_TGT_SEQ = #{sysGbCd}
             UNION ALL
                SELECT  SMB.USE_YN
                	 ,	SMB.RT_TGT_SEQ
                     ,  SMB.RT_TGT_NM
                     ,  SMB.UPR_RT_TGT_SEQ
                     ,  SMB.POPUP_YN
                     ,  LEVEL + 1
                     ,  CONCAT(TMP1.BLANK, '  ' ) AS BLANK
                     ,  CONCAT_WS('\\', TMP1.HIERARCHY, CONCAT(SMB.SORT_SEQ, SMB.RT_TGT_SEQ))  AS HIERARCHY
                     ,  CAST(CAST(
                            CASE
                            WHEN LEVEL + 1 BETWEEN 2 AND 9 THEN rpad(CAST(SMB.SORT_SEQ AS TEXT), (10-LEVEL + 1) * 3 + CHAR_LENGTH(CAST(SMB.SORT_SEQ AS CHAR)), '0')
                            ELSE '0'
                            END AS INTEGER) + CAST(TMP1.NEW_SORT_SEQ AS INTEGER) AS CHAR)
                     ,	SMB.SYS_GB_CD
                     ,	SMB.RT_TGT_TYP_CD
                     ,	SMB.SORT_SEQ
                     ,	SMB.CALL_URL
                     ,	SMB.CUST_INFO_INCL_YN
                     ,	SMB.RMK_CONT
                     ,	SMB.BTN_ID
                     ,	SMB.LEAF_MENU_YN
                     ,	SMB.USER_HELP_CONT
                FROM    ST_RT_TGT_BASE SMB, CTE AS TMP1
                WHERE   TMP1.RT_TGT_SEQ = SMB.UPR_RT_TGT_SEQ
                AND     SMB.RT_TGT_TYP_CD IN ('10','20')
            )
            SELECT  CASE
            			WHEN (SELECT COUNT(RT_GRP_NO)
            				  FROM ST_RT_INFO
            				  WHERE RT_GRP_NO = #{rtGrpNo}
            				  AND RT_TGT_SEQ = CTE.RT_TGT_SEQ
            				  AND RT_SUB_GB_CD = '01') > 0
            			THEN (SELECT USE_YN
            				  FROM ST_RT_INFO
            				  WHERE RT_GRP_NO = #{rtGrpNo}
            				  AND RT_TGT_SEQ = CTE.RT_TGT_SEQ
            				  AND RT_SUB_GB_CD = '01')
            			ELSE 'N'
            		END AS USE_YN
            	,	CTE.RT_TGT_SEQ
            	,	CTE.RT_TGT_NM
            	,	CTE.UPR_RT_TGT_SEQ
            	,	CTE.POPUP_YN
            	,	CTE.LEVEL
            	,	CTE.BLANK
            	,	CTE.HIERARCHY
            	,	CTE.NEW_SORT_SEQ
            	,	CTE.SYS_GB_CD
            	,	CTE.RT_TGT_TYP_CD
            	,	CTE.SORT_SEQ
            	,	CTE.CALL_URL
            	,	CTE.CUST_INFO_INCL_YN
            	,	CTE.RMK_CONT
            	,	CTE.BTN_ID
            	,	CTE.LEAF_MENU_YN
            	,	CTE.USER_HELP_CONT
            FROM      CTE
            ORDER BY  NEW_SORT_SEQ :: NUMERIC, RT_TGT_SEQ
    </select>

    <select id="getMenuInfo" parameterType="RtTargetBaseRequest" resultType="RtTargetBaseResponse">
        SELECT                              /* stRtTgtBase.getMenuInfo */
              A.RT_TGT_SEQ
             ,A.RT_TGT_NM
             ,A.UPR_RT_TGT_SEQ
             ,(SELECT RT_TGT_NM FROM ST_RT_TGT_BASE B WHERE B.RT_TGT_SEQ = A.UPR_RT_TGT_SEQ) AS uprRtTgtNm
             ,A.CALL_URL
             ,A.BTN_ID
             ,A.USE_YN
             ,A.SORT_SEQ
             ,A.RT_TGT_TYP_CD
             ,A.LEAF_MENU_YN
             ,A.POPUP_YN
             ,A.CUST_INFO_INCL_YN
             ,A.RMK_CONT
             ,A.SYS_REG_ID
             ,TO_CHAR(A.SYS_REG_DTM,'yyyy-mm-dd hh24:mi:ss') AS SYS_REG_DTM
             ,A.SYS_MOD_ID
             ,TO_CHAR(A.SYS_MOD_DTM,'yyyy-mm-dd hh24:mi:ss') AS SYS_MOD_DTM
             ,USER_HELP_CONT
          FROM ST_RT_TGT_BASE A
        <if test="rtTgtSeq != null and rtTgtSeq!= ''">
            WHERE A.RT_TGT_SEQ = #{rtTgtSeq}
        </if>
    </select>

    <sql id="subMenuList">
        SELECT  /* stRtTgtBase.subMenuList */
                  A.RT_TGT_SEQ
                , A.RT_TGT_NM
                , A.SYS_GB_CD
                , A.RT_TGT_TYP_CD
                , A.CALL_URL
                , A.BTN_ID
                , A.UPR_RT_TGT_SEQ
                , A.USE_YN
                , A.SORT_SEQ
                , A.POPUP_YN
                , A.CUST_INFO_INCL_YN
                , A.RMK_CONT
        FROM      ST_RT_TGT_BASE A
        <if test="rtTgtSeq != null and rtTgtSeq!= ''">
            WHERE A.UPR_RT_TGT_SEQ = #{rtTgtSeq}
        </if>
        ORDER BY SORT_SEQ
    </sql>

    <select id="getSubMenuList" parameterType="RtTargetBaseRequest" resultType="RtTargetBaseResponse">
        <include refid="subMenuList" />
        <include refid="paginatedBase" />
    </select>

    <select id="getSubMenuListCount" parameterType="RtTargetBaseRequest" resultType="java.lang.Integer">
        SELECT          /* stRtTgtBase.getSubMenuListCount */
                COUNT(T1.RT_TGT_SEQ)
        FROM (
                <include refid="subMenuList" />
        ) T1
    </select>

    <select id="getAdminGroupList" resultType="java.lang.Integer" parameterType="com.enbiz.api.bo.app.dto.request.login.LoginRequest">
        SELECT                      /* StRtTgtBase.getAdminGroupList */
               COUNT(A.RT_TGT_SEQ)
          FROM ST_RT_INFO A
             , ST_RT_TGT_BASE B
         WHERE A.RT_TGT_SEQ   = B.RT_TGT_SEQ
           AND (  (A.RT_SUB_GB_CD = '01' AND A.RT_GRP_NO = #{rtGrpNo} )    /* argument: 권한그룹번호 */
                   OR (A.RT_SUB_GB_CD = '02' AND A.RT_GRP_NO = #{loginId}   ))   /* argument: 사용자아이디 */
           AND A.USE_YN         = 'Y'
           AND B.USE_YN         = 'Y'
           AND B.SYS_GB_CD      = #{sysGbCd}                             /* argument: 시스템구분 */
           AND B.RT_TGT_TYP_CD  IN('20','30','40')                 /* 권한대상유형 화면, Request,버튼  */
           AND LTRIM(B.CALL_URL,'/')  = LTRIM(#{caloUrl},'/')    /* argument: 호출URL       */
    </select>

    <select id="getRtTgtSeqByStRtTgtBase" resultType="StRtTgtBase" parameterType="StRtTgtBase">
        SELECT               /* StRtTgtBase.getRtTgtSeqByStRtTgtBase */
               RT_TGT_SEQ
             , SYS_GB_CD
             , RT_TGT_TYP_CD
             , RT_TGT_NM
             , SORT_SEQ
             , CUST_INFO_INCL_YN
             , UPR_RT_TGT_SEQ
             , LEAF_MENU_YN
          FROM ST_RT_TGT_BASE
         WHERE CALL_URL = #{callUrl}
           AND RT_TGT_TYP_CD IN ('20', '30', '40')
           AND USE_YN = 'Y'
         LIMIT 1
    </select>

    <select id="getSubMenuCheck" parameterType="RtTargetBaseRequest" resultType="java.lang.Integer">
        SELECT                  /* stRtTgtBase.getSubMenuCheck */
                    COUNT(RT_TGT_SEQ)
        FROM        ST_RT_TGT_BASE
        WHERE       UPR_RT_TGT_SEQ = #{rtTgtSeq}
    </select>

    <select id="getStRtInfoCheck" parameterType="RtTargetBaseRequest" resultType="java.lang.Integer">
        SELECT                  /* stRtTgtBase.getStRtInfoCheck */
                    COUNT(RT_TGT_SEQ)
        FROM        ST_RT_INFO
        WHERE       RT_TGT_SEQ = #{rtTgtSeq}
        AND         USE_YN = 'Y'
    </select>

	<!-- 버튼의 소속 화면 조회 -->
    <select id="selectScrRtTgtSeqByRtTgtSeq" parameterType="java.lang.String" resultType="java.lang.String">
		WITH RECURSIVE menus AS (
	        SELECT		/* selectScrRtTgtSeqByRtTgtSeq */
	        	rt_tgt_seq,
	        	sys_gb_cd,
	        	rt_tgt_typ_cd,
	        	rt_tgt_nm,
	        	upr_rt_tgt_seq,
	        	10 AS level
	        FROM st_rt_tgt_base
	        WHERE rt_tgt_seq = #{rtTgtSeq}
	        and USE_YN = 'Y'
		    UNION ALL
	        SELECT
	        	e.rt_tgt_seq,
	        	e.sys_gb_cd,
	        	e.rt_tgt_typ_cd,
	        	e.rt_tgt_nm,
	        	e.upr_rt_tgt_seq,
	        	menus.level - 1 AS level
	        FROM st_rt_tgt_base e
	        JOIN menus ON menus.upr_rt_tgt_seq = e.rt_tgt_seq
	        where USE_YN = 'Y'
		)
		select
        	max (rt_tgt_seq)
		from menus
		where level = (
			select max(level) as max_level
			from menus
			where rt_tgt_typ_cd = '20'
		)
    </select>

	<select id="getIndividualMenuTreeList" parameterType="RtTargetBaseRequest" resultType="RtTargetBaseResponse">
        WITH RECURSIVE CTE AS (       /* stRtTgtBase.getIndividualMenuTreeList */
                SELECT  A.USE_YN
                	 ,	A.SYS_GB_CD
                	 ,	A.RT_TGT_TYP_CD
                	 ,	A.SORT_SEQ
                	 ,	A.CUST_INFO_INCL_YN
                	 ,	A.POPUP_YN
                	 ,	A.LEAF_MENU_YN
                	 ,	A.RT_TGT_SEQ
                     ,  A.RT_TGT_NM
                     ,  A.UPR_RT_TGT_SEQ
                     ,  1 AS LEVEL
                     ,  ' ' AS BLANK
                     ,  CAST(CONCAT('\\',CONCAT(LPAD(SORT_SEQ, 3, '0'), A.RT_TGT_SEQ)) AS CHAR(100))  AS HIERARCHY
                     , '0' AS NEW_SORT_SEQ
                FROM	ST_RT_TGT_BASE A
                WHERE	UPR_RT_TGT_SEQ IN ('11', '12', '31', '32')
             UNION ALL
                SELECT  SMB.USE_YN
                	 ,	SMB.SYS_GB_CD
                	 ,	SMB.RT_TGT_TYP_CD
                	 ,	SMB.SORT_SEQ
                	 ,	SMB.CUST_INFO_INCL_YN
                	 ,	SMB.POPUP_YN
                	 ,	SMB.LEAF_MENU_YN
                	 ,	SMB.RT_TGT_SEQ
                     ,  SMB.RT_TGT_NM
                     ,  SMB.UPR_RT_TGT_SEQ
                     ,  LEVEL + 1
                     ,  CONCAT(TMP1.BLANK, '  ' ) AS BLANK
                     ,  CONCAT_WS('\\', TMP1.HIERARCHY, CONCAT(LPAD(SMB.SORT_SEQ, 3, '0'), SMB.RT_TGT_SEQ))  AS HIERARCHY
                     ,  CAST(CAST(
                            CASE
                            WHEN LEVEL + 1 BETWEEN 2 AND 9 THEN rpad(CAST(SMB.SORT_SEQ AS CHAR), (10-LEVEL + 1) * 3 + CHAR_LENGTH(CAST(SMB.SORT_SEQ AS CHAR)), '0')
                            ELSE '0'
                            END AS INTEGER) + CAST(TMP1.NEW_SORT_SEQ AS INTEGER) AS CHAR)
                FROM    ST_RT_TGT_BASE SMB, CTE AS TMP1
                WHERE   TMP1.RT_TGT_SEQ = SMB.UPR_RT_TGT_SEQ
                AND     SMB.RT_TGT_TYP_CD IN ('10','20')
            )
            SELECT    CTE.*
            FROM      CTE
            ORDER BY HIERARCHY
    </select>

    <select id="getIndividualMenuTreeListForUser" parameterType="RtTargetBaseRequest" resultType="RtTargetBaseResponse">
        WITH RECURSIVE CTE AS (       /* stRtTgtBase.getIndividualMenuTreeListForUser */
                SELECT  SRI.USE_YN
                	 ,	A.SYS_GB_CD
                	 ,	A.RT_TGT_TYP_CD
                	 ,	A.SORT_SEQ
                	 ,	A.CUST_INFO_INCL_YN
                	 ,	A.POPUP_YN
                	 ,	A.LEAF_MENU_YN
                	 ,	A.RT_TGT_SEQ
                     ,  A.RT_TGT_NM
                     ,  A.UPR_RT_TGT_SEQ
                     ,  A.POPUP_YN
                     ,  1 AS LEVEL
                     ,  ' ' AS BLANK
                     ,  CAST(CONCAT('\\',SORT_SEQ, A.RT_TGT_SEQ) AS CHAR(100))  AS HIERARCHY
                     , '0' AS NEW_SORT_SEQ
                FROM	ST_RT_TGT_BASE A JOIN ST_RT_INFO SRI ON A.RT_TGT_SEQ = SRI.RT_TGT_SEQ
                WHERE	A.UPR_RT_TGT_SEQ IN ('11', '12', '31', '32')
                AND		SRI.RT_SUB_GB_CD = #{rtSubGbCd}
                AND		SRI.RT_GRP_NO = #{rtGrpNo}
             UNION ALL
                SELECT  SRI.USE_YN
                	 ,	SMB.SYS_GB_CD
                	 ,	SMB.RT_TGT_TYP_CD
                	 ,	SMB.SORT_SEQ
                	 ,	SMB.CUST_INFO_INCL_YN
                	 ,	SMB.POPUP_YN
                	 ,	SMB.LEAF_MENU_YN
                	 ,	SMB.RT_TGT_SEQ
                     ,  SMB.RT_TGT_NM
                     ,  SMB.UPR_RT_TGT_SEQ
                     ,  SMB.POPUP_YN
                     ,  LEVEL + 1
                     ,  CONCAT(TMP1.BLANK, '  ' ) AS BLANK
                     ,  CONCAT_WS('\\', TMP1.HIERARCHY, CONCAT(SMB.SORT_SEQ, SMB.RT_TGT_SEQ))  AS HIERARCHY
                     ,  CAST(CAST(
                            CASE
                            WHEN LEVEL + 1 BETWEEN 2 AND 9 THEN rpad(CAST(SMB.SORT_SEQ AS TEXT), (10-LEVEL + 1) * 3 + CHAR_LENGTH(CAST(SMB.SORT_SEQ AS TEXT)), '0')
                            ELSE '0'
                            END AS NUMERIC) + CAST(TMP1.NEW_SORT_SEQ AS NUMERIC) AS text)
                FROM    ST_RT_TGT_BASE SMB JOIN ST_RT_INFO SRI ON SMB.RT_TGT_SEQ = SRI.RT_TGT_SEQ, CTE AS TMP1
                WHERE   TMP1.RT_TGT_SEQ = SMB.UPR_RT_TGT_SEQ
                AND     SMB.RT_TGT_TYP_CD IN ('10','20')
                AND		SRI.RT_SUB_GB_CD = '02'
                AND		SRI.RT_GRP_NO = #{rtGrpNo}
            )
            SELECT    CTE.*
            FROM      CTE
            ORDER BY  NEW_SORT_SEQ :: NUMERIC, RT_TGT_SEQ
    </select>

    <select id="getIndivMenuCheck" parameterType="RtTargetBaseRequest" resultType="int">
    	select count(srtb.rt_tgt_seq)
		from st_rt_tgt_base srtb
		left outer join st_rt_info sri on srtb.rt_tgt_seq = sri.rt_tgt_seq
		where srtb.rt_tgt_typ_cd in ('10', '20')
		and sri.rt_grp_no = #{rtGrpNo}
		and sri.rt_sub_gb_cd ='02'
    </select>

    <select id="getRightGroupMenuCheck" parameterType="RtTargetBaseRequest" resultType="int">
    	select count(srtb.rt_tgt_seq)
		from st_rt_tgt_base srtb
		left outer join st_rt_info sri on srtb.rt_tgt_seq = sri.rt_tgt_seq
		where srtb.rt_tgt_typ_cd in ('10', '20')
		and sri.rt_grp_no = #{rtGrpNo}
		and sri.rt_sub_gb_cd ='01'
    </select>
</mapper>